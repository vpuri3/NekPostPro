#!/bin/bash
##----------------------------------------------------##
# runs nek cases every 7300 seconds.
#
# INPUT: $1: case name
#        $2: base folder name
#        $3: # of last completed job
#        $4: # of jobs to run
##----------------------------------------------------##

case=$1
base=$2
num=$3

email="vpuri3@illinois.edu" # email log after queuing
res="restart0.f00001"       # name of restart file
rsfx="0.f00002"             # suffix of next restart file
bsfx="0.f00001"             # suffix for budgets file
nnodes="256"                # # of nodes

dir=$PWD
log=$dir/run.log

if [ -f $log ]; then
    echo "moving old log to $log 2"
    mv run.log run.log2
fi						              
						              
echo "##############################################"         |& tee -a $log
echo "##############################################"         |& tee -a $log
echo "##############################################"         |& tee -a $log
echo $(date -R)                                               |& tee -a $log
echo "Starting new session in directory $dir."                |& tee -a $log
echo "Running case $case from $base$num"                      |& tee -a $log
echo "Storing log in $log"                                    |& tee -a $log
							      
for ((i=1; i<=$4; i++)); do				      
    dir0=$dir/$base$num					      
    num=$((num+1))					      
    dir1=$dir/$base$num					      
							      
    echo "#--------------------------------------------#"     |& tee -a $log
    echo "#------------------ RUN $i -------------------#"    |& tee -a $log
    echo "#--------------------------------------------#"     |& tee -a $log
    echo $(date -R)                                           |& tee -a $log


    if [ ! -f $dir0/$case$rsfx ]; then
	echo "ABORT: $dir0 does not contain $case$rsfx ."     |& tee -a $log
	mail -s "$case autorun" $email                                < $log
	exit						         
    elif [ ! -f $dir0/i01$case$bsfx ]; then		         
	echo "ABORT: $dir0 does not contain i01$case$bsfx ."  |& tee -a $log
	mail -s "$case autorun" $email                                < $log
	exit
    fi

    echo "copying $dir0 to $dir1"                             |& tee -a $log
    cp -r $dir0 $dir1                                         |& tee -a $log

    cd  $dir1

    echo "removing old logs and updating restart"             |& tee -a $log
    rm $res *.cobaltlog *.error *.output                      |& tee -a $log
    rm *log* *out*                                            |& tee -a $log
    mv -v $case$rsfx $res                                     |& tee -a $log
						            
    echo "restarting from $res"                               |& tee -a $log
    head -c 130 $res                                          |& tee -a $log
    echo "reading budgets from i##$case$bsfx"                 |& tee -a $log
    head -c 130 i01$case$bsfx                                 |& tee -a $log

    echo "compiling..."                                       |& tee -a $log
    makenek $case                                              &>> /dev/null

    if [ ! -f $dir1/nek5000 ]; then
	echo "ABORT: compilation failed in $dir1 ."           |& tee -a $log
	echo "Appending compiler.out to log."                 |& tee -a $log
	$dir1/compiler.out                                           >> $log
	mail -s "$case autorun" $email                                < $log
	exit					       
    fi						       
						       
    echo "compilation successful."                            |& tee -a $log
    tail -c 300 $dir1/compiler.out                            |& tee -a $log
    ./my_nekqsub $case $nnodes                                      2>> $log
					                      
    if [ $? != 0 ]; then		                      
	echo "ABORT: could not queue job."                    |& tee -a $log
	mail -s "$case autorun" $email                                < $log
	exit
    fi

    sleep 10
    qstat --header JobId:User:RunTime:WallTime:State:Location |& tee -a $log
    echo "successfully queued job"                            |& tee -a $log
    echo "goodnight"                                          |& tee -a $log
    mail -s "$case autorun" $email                                    < $log

    sleep 300
    err=$(tail *.output)
    if echo $err | grep -Fq "dying"; then
	echo "ABORT: job died before its time."               |& tee -a $log
	mail -s "$case autorun" $email                                < $log
	exit					       
    fi

    sleep 7000
    echo $(date -R)                                           |& tee -a $log
    echo "long time no see? time for next run"                |& tee -a $log
done