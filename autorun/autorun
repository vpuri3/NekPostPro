#!/bin/bash
##----------------------------------------------------##
# runs nek cases every 7300 seconds.
#
# INPUT: $1: case name
#        $2: base folder name
#        $3: # of last completed case
##----------------------------------------------------##

case=$1
base=$2
num=$3

email="vpuri3@illinois.edu" # email log after queuing
res="restart0.f00001"       # name of restart file
rsfx="0.f00002"             # suffix of next restart file
bsfx="0.f00001"             # suffix for budgets file
nnodes="256"                # # of nodes

dir=$PWD
log=$dir/run.log

if [ -f $log ]; then
    mv run.log run.log2
fi

echo "##############################################" |& tee -a $log
echo "##############################################" |& tee -a $log
echo "##############################################" |& tee -a $log
echo $(date -R)                                       |& tee -a $log
echo "Starting new session in directory $dir."        |& tee -a $log
echo "Running case $case from $base$num"              |& tee -a $log
echo "Storing log in $log"                            |& tee -a $log

for i in {1..3}
do
    dir0=$dir/$base$num
    num=$((num+1))
    dir1=$dir/$base$num

    echo "#--------------------------------------------#"  |& tee -a $log
    echo "#------------------ RUN $i -------------------#" |& tee -a $log
    echo "#--------------------------------------------#"  |& tee -a $log
    echo $(date -R)                                        |& tee -a $log


    if [ ! -f $dir0/$case$rsfx ]; then
	echo "ABORT: $dir0 does not contain $case$rsfx ."    |& tee -a $log
	mail -s "$case autorun" $email                               < $log
	exit
    elif [ ! -f $dir0/i01$case$bsfx ]; then
	echo "ABORT: $dir0 does not contain i01$case$bsfx ." |& tee -a $log
	mail -s "$case autorun" $email                               < $log
	exit
    fi

    echo "copying $dir0 to $dir1" |& tee -a $log
    cp -r $dir0 $dir1             |& tee -a $log

    cd  $dir1

    echo "removing old logs and updating restart" |& tee -a $log
    rm $res *.cobaltlog *.error *.output          |& tee -a $log
    rm *log* *out*                                |& tee -a $log
    mv -v $case$rsfx $res                         |& tee -a $log

    if [ ! -f $dir1/$res ]; then
	echo "ABORT: $res not found in $dir1 ." |& tee -a $log
	mail -s "$case autorun" $email < $log
	exit
    fi

    echo "restarting from $res"               |& tee -a $log
    head -c 130 $res                          |& tee -a $log
    echo -e '\n'                              |& tee -a $log
    echo "reading budgets from i##$case$bsfx" |& tee -a $log
    head -c 130 i01$case$bsfx                 |& tee -a $log
    echo -e '\n'                              |& tee -a $log

    echo "compiling..." |& tee -a $log
    makenek $case        &>>  /dev/null

    if [ ! -f $dir1/nek5000 ]; then
	echo "ABORT: compilation failed in $dir1 ." |& tee -a $log
	echo "Appending compiler.out to run.log ."  |& tee -a $log
	$dir1/compiler.out                                 >> $log
	mail -s "$case autorun" $email                      < $log
	exit
    fi

    echo "Compilation Successful." |& tee -a $log
    tail -c 300 $dir1/compiler.out |& tee -a $log
    ./my_nekqsub $case $nnodes     |& tee -a $log
 
    cd $dir

    sleep 10
    qstat --header JobId:User:RunTime:WallTime:State:Location |& tee -a $log
    echo "successfully queued job"                            |& tee -a $log
    echo "goodnight"                                          |& tee -a $log
    mail -s "$case autorun" $email                                    < $log

    sleep 7300
    echo $(date -R)                            |& tee -a $log
    echo "long time no see? time for next run" |& tee -a $log
done