c-----------------------------------------------------------------------
c
c     integer gs_avg_hndl
c     save    gs_avg_hndl
c     data    gs_avg_hndl / 0 /
c
c     f         = 1
c     bctyp     = 'W  '
c     nelx      = 64
c     nely      = 16
c     nelz      = 32
c     ifld      = 1
c     idir      = 3
c     ifavg     = .true. ! average over homogeneous direction idir_avg
c     ifsample  = .true.
c
c     ifplnr_avg = .false.
c     ifsample   = .false.
c
c     call comp_tke(gs_avg_hndl,nelx,nely,nelz,ifld,idir,ifplnr_avg
c    $                                                       ,ifsample)
c
c-----------------------------------------------------------------------
      subroutine comp_tke(gs_hndl1,nelx,nely,nelz,ifld,idir,ifplnr_avg
     $                                                        ,ifsample)
      INCLUDE 'SIZE'  
      INCLUDE 'TOTAL' 
      INCLUDE 'AVG'
      INCLUDE 'AVGINCOMP'
      INCLUDE 'REFERENCE'
      INCLUDE 'BUDGETSINCOMP'
      INCLUDE 'TKEINCOMP'

      integer nelx,nely,nelz
      integer ifld,idir,gs_hndl1
      logical ifplnr_avg,ifsample
c
      logical iifxyo,iifvo,iifpo,iifto ! for outposting
c
      if(nid.eq.0) write(6,*) 'computing TKE.'
c
      ntot = nx1*ny1*nz1*nelv
c
      call rzero(tke,ntnt)
      call rzero(cnk,ntot)
      call rzero(prk,ntot)
      call rzero(ptk,ntot)
      call rzero(pdk,ntot)
      call rzero(psk,ntot)
      call rzero(tdk,ntot)
      call rzero(epk,ntot)
      call rzero(vdk,ntot)
      call rzero(ppp,ntot)
c
      call rzero(tkea,ntnt)
      call rzero(cnka,ntot)
      call rzero(prka,ntot)
      call rzero(ptka,ntot)
      call rzero(pdka,ntot)
      call rzero(pska,ntot)
      call rzero(tdka,ntot)
      call rzero(epka,ntot)
      call rzero(vdka,ntot)
      call rzero(pppa,ntot)
c
      do i=1,ntot
         cnk(i,1,1,1)=conv_uu(i,1,1,1)+conv_vv(i,1,1,1)+conv_ww(i,1,1,1)
         prk(i,1,1,1)= prd_uu(i,1,1,1)+ prd_vv(i,1,1,1)+ prd_ww(i,1,1,1)
         ptk(i,1,1,1)= ptr_uu(i,1,1,1)+ ptr_vv(i,1,1,1)+ ptr_ww(i,1,1,1)
         pdk(i,1,1,1)= pdf_uu(i,1,1,1)+ pdf_vv(i,1,1,1)+ pdf_ww(i,1,1,1)
         psk(i,1,1,1)= pst_uu(i,1,1,1)+ pst_vv(i,1,1,1)+ pst_ww(i,1,1,1)
         tdk(i,1,1,1)= tdf_uu(i,1,1,1)+ tdf_vv(i,1,1,1)+ tdf_ww(i,1,1,1)
         epk(i,1,1,1)= eps_uu(i,1,1,1)+ eps_vv(i,1,1,1)+ eps_ww(i,1,1,1)
         vdk(i,1,1,1)= vdf_uu(i,1,1,1)+ vdf_vv(i,1,1,1)+ vdf_ww(i,1,1,1)
c
         cnk(i,1,1,1) = cnk(i,1,1,1) * 0.5
         prk(i,1,1,1) = prk(i,1,1,1) * 0.5
         ptk(i,1,1,1) = ptk(i,1,1,1) * 0.5
         pdk(i,1,1,1) = pdk(i,1,1,1) * 0.5
         psk(i,1,1,1) = psk(i,1,1,1) * 0.5
         tdk(i,1,1,1) = tdk(i,1,1,1) * 0.5
         epk(i,1,1,1) = epk(i,1,1,1) * 0.5
         vdk(i,1,1,1) = vdk(i,1,1,1) * 0.5
c
         ppp(i,1,1,1) = ptk(i,1,1,1) - (pdk(i,1,1,1) + psk(i,1,1,1))
c
         tke(i,1,1,1) = - cnk(i,1,1,1) + prk(i,1,1,1) + ptk(i,1,1,1)
     $                  + tdk(i,1,1,1) + epk(i,1,1,1) + vdk(i,1,1,1)
      enddo
c
      if(ifplnr_avg) then
       if(nid.eq.0) write(6,*) "Averaging in direction ", idir
c
       call plane_avg_tensor(tkea,tke,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(cnka,cnk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(prka,prk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(ptka,ptk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(pdka,pdk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(pska,psk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(tdka,tdk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(epka,epk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(vdka,vdk,gs_hndl1,nelx,nely,nelz,ifld,idir)
       call plane_avg_tensor(pppa,ppp,gs_hndl1,nelx,nely,nelz,ifld,idir)

      else
       call copy(tkea,tke,ntot)
       call copy(cnka,cnk,ntot)
       call copy(prka,prk,ntot)
       call copy(ptka,ptk,ntot)
       call copy(pdka,pdk,ntot)
       call copy(pska,psk,ntot)
       call copy(tdka,tdk,ntot)
       call copy(epka,epk,ntot)
       call copy(vdka,vdk,ntot)
       call copy(pppa,ppp,ntot)
      endif

!     Outpost

      iifxyo = ifxyo
      iifvo  = ifvo
      iifpo  = ifpo
      iifto  = ifto

      ifxyo = .true.
      ifvo  = .true.
      ifpo  = .true.
      ifto  = .true.
c
      call outpost2(cnka,prka,ptka,pdk,pska,1,'bb1')
      call outpost2(tdka,epka,vdka,tke,pppa,1,'bb2')
c
      ifxyo = iifxyo
      ifvo  = iifvo
      ifpo  = iifpo
      ifto  = iifto
c
      if(ifsample) then 
         call sample(ptk,pdk,psk,ppp,prk,'ppp',
     $              'transp','diff','strain','ppp','prod')
      endif

      return
      end
c-----------------------------------------------------------------------
