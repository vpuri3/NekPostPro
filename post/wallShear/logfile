/----------------------------------------------------------\
|      _   __ ______ __ __  ______  ____   ____   ____     |
|     / | / // ____// //_/ / ____/ / __ \/ __ \/ __ \   |
|    /  |/ // __/  / ,<   /___ \ / / / // / / // / / /    |
|   / /|  // /___ / /| | ____/ / / /_/ // /_/ // /_/ /     |
|  /_/ |_//_____//_/ |_|/_____/  \___/ \___/ \___/      |
|                                                          |
|----------------------------------------------------------|
|                                                          |
| NEK5000:  Open Source Spectral Element Solver            |
| COPYRIGHT (c) 2008-2017 UCHICAGO ARGONNE, LLC            |
| Version:  v17.0                                          |
| Web:      http://nek5000.mcs.anl.gov                     |
|                                                          |
\----------------------------------------------------------/
                                                              

 Number of processors:            1
 REAL    wdsize      :            8
 INTEGER wdsize      :            4
 Timer accuracy      : 2.62E-07
  
 Reading /homes/vpuri/NekRoutines/post/wallShear/smoothWavyWall.rea                                                                          
 WARNING: lgmres might be too low!
 Reading /homes/vpuri/NekRoutines/post/wallShear/smoothWavyWall.re2                                                                          
 mapping elements to processors
 Reading /homes/vpuri/NekRoutines/post/wallShear/smoothWavyWall.map                                                                          
            0         1000         1000         1000         1000  NELV
 RANK     0 IEG       1       2       3       4       5       6       7       8
                      9      10      11      12      13      14      15      16
                     17      18      19      20      21      22      23      24
                     25      26      27      28      29      30      31      32
                     33      34      35      36      37      38      39      40
                     41      42      43      44      45      46      47      48
                     49      50      51      52      53      54      55      56
                     57      58      59      60      61      62      63      64
                     65      66      67      68      69      70      71      72
                     73      74      75      76      77      78      79      80
                     81      82      83      84      85      86      87      88
                     89      90      91      92      93      94      95      96
                     97      98      99     100     101     102     103     104
                    105     106     107     108     109     110     111     112
                    113     114     115     116     117     118     119     120
                    121     122     123     124     125     126     127     128
                    129     130     131     132     133     134     135     136
                    137     138     139     140     141     142     143     144
                    145     146     147     148     149     150     151     152
                    153     154     155     156     157     158     159     160
                    161     162     163     164     165     166     167     168
                    169     170     171     172     173     174     175     176
                    177     178     179     180     181     182     183     184
                    185     186     187     188     189     190     191     192
                    193     194     195     196     197     198     199     200
                    201     202     203     204     205     206     207     208
                    209     210     211     212     213     214     215     216
                    217     218     219     220     221     222     223     224
                    225     226     227     228     229     230     231     232
                    233     234     235     236     237     238     239     240
                    241     242     243     244     245     246     247     248
                    249     250     251     252     253     254     255     256
                    257     258     259     260     261     262     263     264
                    265     266     267     268     269     270     271     272
                    273     274     275     276     277     278     279     280
                    281     282     283     284     285     286     287     288
                    289     290     291     292     293     294     295     296
                    297     298     299     300     301     302     303     304
                    305     306     307     308     309     310     311     312
                    313     314     315     316     317     318     319     320
                    321     322     323     324     325     326     327     328
                    329     330     331     332     333     334     335     336
                    337     338     339     340     341     342     343     344
                    345     346     347     348     349     350     351     352
                    353     354     355     356     357     358     359     360
                    361     362     363     364     365     366     367     368
                    369     370     371     372     373     374     375     376
                    377     378     379     380     381     382     383     384
                    385     386     387     388     389     390     391     392
                    393     394     395     396     397     398     399     400
                    401     402     403     404     405     406     407     408
                    409     410     411     412     413     414     415     416
                    417     418     419     420     421     422     423     424
                    425     426     427     428     429     430     431     432
                    433     434     435     436     437     438     439     440
                    441     442     443     444     445     446     447     448
                    449     450     451     452     453     454     455     456
                    457     458     459     460     461     462     463     464
                    465     466     467     468     469     470     471     472
                    473     474     475     476     477     478     479     480
                    481     482     483     484     485     486     487     488
                    489     490     491     492     493     494     495     496
                    497     498     499     500     501     502     503     504
                    505     506     507     508     509     510     511     512
                    513     514     515     516     517     518     519     520
                    521     522     523     524     525     526     527     528
                    529     530     531     532     533     534     535     536
                    537     538     539     540     541     542     543     544
                    545     546     547     548     549     550     551     552
                    553     554     555     556     557     558     559     560
                    561     562     563     564     565     566     567     568
                    569     570     571     572     573     574     575     576
                    577     578     579     580     581     582     583     584
                    585     586     587     588     589     590     591     592
                    593     594     595     596     597     598     599     600
                    601     602     603     604     605     606     607     608
                    609     610     611     612     613     614     615     616
                    617     618     619     620     621     622     623     624
                    625     626     627     628     629     630     631     632
                    633     634     635     636     637     638     639     640
                    641     642     643     644     645     646     647     648
                    649     650     651     652     653     654     655     656
                    657     658     659     660     661     662     663     664
                    665     666     667     668     669     670     671     672
                    673     674     675     676     677     678     679     680
                    681     682     683     684     685     686     687     688
                    689     690     691     692     693     694     695     696
                    697     698     699     700     701     702     703     704
                    705     706     707     708     709     710     711     712
                    713     714     715     716     717     718     719     720
                    721     722     723     724     725     726     727     728
                    729     730     731     732     733     734     735     736
                    737     738     739     740     741     742     743     744
                    745     746     747     748     749     750     751     752
                    753     754     755     756     757     758     759     760
                    761     762     763     764     765     766     767     768
                    769     770     771     772     773     774     775     776
                    777     778     779     780     781     782     783     784
                    785     786     787     788     789     790     791     792
                    793     794     795     796     797     798     799     800
                    801     802     803     804     805     806     807     808
                    809     810     811     812     813     814     815     816
                    817     818     819     820     821     822     823     824
                    825     826     827     828     829     830     831     832
                    833     834     835     836     837     838     839     840
                    841     842     843     844     845     846     847     848
                    849     850     851     852     853     854     855     856
                    857     858     859     860     861     862     863     864
                    865     866     867     868     869     870     871     872
                    873     874     875     876     877     878     879     880
                    881     882     883     884     885     886     887     888
                    889     890     891     892     893     894     895     896
                    897     898     899     900     901     902     903     904
                    905     906     907     908     909     910     911     912
                    913     914     915     916     917     918     919     920
                    921     922     923     924     925     926     927     928
                    929     930     931     932     933     934     935     936
                    937     938     939     940     941     942     943     944
                    945     946     947     948     949     950     951     952
                    953     954     955     956     957     958     959     960
                    961     962     963     964     965     966     967     968
                    969     970     971     972     973     974     975     976
                    977     978     979     980     981     982     983     984
                    985     986     987     988     989     990     991     992
                    993     994     995     996     997     998     999    1000
  
 element load imbalance:             0         1000         1000
 done :: mapping   0.46918E-02 sec

  
  preading mesh 
  preading bc for ifld            1
 done :: read .re2 file   0.17E-01 sec

            0  objects found
 118   Parameters from file:
   1      1.00000     p001 DENSITY
   2     -1.00        p002 VISCOS
   8      1.00000     p008 CONDUCT
  12      1.5e-0       p012 DT
  15      10000.0    p015 IOSTEP
  18      0.50000E-01 p018 GRID < 0 --> # cells on screen
  21      0.10000E-06     p021 DIVERGENCE	# after using 0 to see
  22      0.10000E-08     p022 HELMHOLTZ
  24     0.100000E-01 p024 TOLREL
  25     0.100009E-01 p025 TOLABS
  26      1.000000    p26 COURANT/NTAU
  27      2.000000    p27 TORDER
  54     -1.00000     p054 fixed flow rate dir: |p54|=1,2,3=x,y,z
  55      1.00000     p055 vol.flow rate (p54>0) or Ubar (p54<0)
  59      1.00000     p059 !=0 --> full Jac. eval. for each el.
  65      1.00000     p065 #iofiles (eg, 0 or 64); <0 --> sep. dirs
  66      6.00000     p066 output : <0=ascii, else binary
  67      6.00000     p067 restart: <0=ascii, else binary
  93      20.0000     p093 Number of previous pressure solns saved
  94      3.00000     p094 start projecting velocity after p94 step
  95      5.00000     p095 start projecting pressure after p95 step
  99      4.00000     p099 dealiasing: <0--> off/3--> old/4--> new
 101      1.00000     p101 Number of additional modes to filter
 103      0.01        p103 weight of stabilizing filter (.01)
  
 done :: read .rea file   0.24830E-01 sec

 nelgt/nelgv/lelt:        1000        1000        2052
 lx1  /lx2  /lx3 :           6           6           6
 Reset the target Courant number to .5
 setup mesh topology
   Right-handed check complete for    1000 elements. OK.
   setvert3d:   6       68651      132651       68651       68651
 call usrsetvert
 done :: usrsetvert

gs_setup: 0 unique labels shared
   handle bytes (avg, min, max): 1.604e+06 1603996 1603996
   buffer bytes (avg, min, max): 0 0 0
   setupds time 5.5927E-02 seconds   0  6       68651        1000
            8  max multiplicity
 done :: setup mesh topology
  
 call usrdat
 done :: usrdat

 generate geometry data
 NOTE: All elements deformed , param(59) ^=0
 done :: generate geometry data
  
 call usrdat2
 done :: usrdat2

 regenerate geometry data            1
 NOTE: All elements deformed , param(59) ^=0
 done :: regenerate geometry data            1
  
 verify mesh topology
    0.000000000000000         1.000000000000000       Xrange
    0.000000000000000         1.000000000000000       Yrange
    0.000000000000000         1.000000000000000       Zrange
 done :: verify mesh topology
  
 IFTRAN   =  T
 IFFLOW   =  T
 IFHEAT   =  F
 IFSPLIT  =  T
 IFLOMACH =  F
 IFUSERVP =  F
 IFUSERMV =  F
 IFPERT   =  F
 IFADJ    =  F
 IFSTRS   =  F
 IFCHAR   =  F
 IFCYCLIC =  F
 IFAXIS   =  F
 IFMVBD   =  F
 IFMELT   =  F
 IFNEKNEK =  F
 IFSYNC   =  F
   
 IFVCOR   =  F
 IFINTQ   =  F
 IFGEOM   =  F
 IFSURT   =  F
 IFWCNO   =  F
   
 IFTMSH for field            1    =   F
 IFADVC for field            1    =   T
 IFNONL for field            1    =   F
   
 Dealiasing enabled, lxd=            6
 verify mesh topology
    0.000000000000000         1.000000000000000       Xrange
    0.000000000000000         1.000000000000000       Yrange
    0.000000000000000         1.000000000000000       Zrange
 done :: verify mesh topology
  
 call usrdat3
 done :: usrdat3

 set initial conditions
 nekuic (1) for ifld             1
 call nekuic for vel  
 xyz min     0.0000       0.0000       0.0000    
 uvwpt min   0.0000       0.0000       0.0000       0.0000       0.0000    
 PS min     0.99000E+22
 xyz max     1.0000       1.0000       1.0000    
 uvwpt max   3.0000       0.0000       0.0000       0.0000       0.0000    
 PS max    -0.99000E+22
 done :: set initial conditions
  
gridpoints unique/tot:        132651       216000
  dofs:                   127449                   122451
  
 Initialization successfully completed   0.69104     sec

 nsteps=0 -> skip time loop
 running solver in post processing mode

 call userchk
 in comp_wallShear(...)
 area     is    1.098230083771665     
 xdrag    is    1.226666666666678     
 ydrag    is   2.2135670959951957E-015
 zdrag    is  -2.8431846720716747E-016
 drag mag is    1.226666666666678     

        0  0.0000E+00 Write checkpoint
       FILE:
 /homes/vpuri/NekRoutines/post/wallShear/wshsmoothWavyWall0.f00001                                                                   

        0  0.0000E+00 done :: Write checkpoint
                              file size =      5.8    MB
                              avg data-throughput =    43.5MB/s
                              io-nodes =     1

 max error in x-shear is    5.7939764097625357E-013
 max error in y-shear is    1.4943428439107009E-013
 max error in z-shear is    9.9653861340698313E-007
  
an error occured: dying ...
  
  
total elapsed time             :   8.77666E-01 sec
total solver time w/o IO       :   0.00000E+00 sec
time/timestep                  :   0.00000E+00 sec
avg throughput per timestep    :   0.00000E+00 gridpts/CPUs
total max memory usage         :   4.57028E-01 GB

Command exited with non-zero status 1
0.63user 0.13system 0:00.90elapsed 85%CPU (0avgtext+0avgdata 446316maxresident)k
0inputs+12040outputs (0major+4489minor)pagefaults 0swaps
