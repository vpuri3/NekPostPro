c-----------------------------------------------------------------------
      subroutine geom_avg_wrapper(u,gs_hndl,nelx,nely,nelz,ifld,idir)
      include 'SIZE'
      include 'TOTAL'
      real u(lx1*ly1*lz1*lelt)
      real w1(lx1*ly1*lz1*lelt)
      integer nt

      nt = lx1*ly1*lz1*nelt

      call geom_avg_tensor(w1,u,gs_hndl,nelx,nely,nelz,ifld,idir)

      call rzero(u,nt)

      do i=1,nt
         u(i) = w1(i)
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine geom_avg_tensor(ua,u,gs_hndl,nelx,nely,nelz,ifld,idir
     $     ,nrepeat)
      include 'SIZE'
      include 'TOTAL'
      real u (lx1,ly1,lz1,lelt)
      real ua(lx1,ly1,lz1,lelt)
      integer gs_hndl,e,ex,ey,ez,eg
      integer nrepeat

      if(nrepeat.eq.0) call exitt
c     nelxy = nelx*nely
c     nelyz = nely*nelz
c     nelzx = nelz*nelx

      if (gs_hndl.eq.0) then
       if (idir.eq.1)
     $        call set_gs_xavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
       if (idir.eq.2)
     $        call set_gs_yavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
       if (idir.eq.3)
     $        call set_gs_zavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
      endif

      nel = nelfld(ifld)
      n   = nx1*ny1*nz1*nel

      call copy(ua,bm1,n)              ! Set the averaging weights
      call fgslib_gs_op(gs_hndl,ua,1,1,0) ! Sum weights over columns

      do i=1,n                          ! ua = (w_j*u_j)/( sum_i w_i)
         ua(i,1,1,1) = bm1(i,1,1,1)*u(i,1,1,1)/ua(i,1,1,1)
      enddo

      call fgslib_gs_op(gs_hndl,ua,1,1,0) ! Sum weighted values

      return
      end
c-----------------------------------------------------------------------
      subroutine set_gs_xavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
c     Set the x-average handle
      include 'SIZE'
      include 'TOTAL'
      integer gs_avg_hndl,e,ex,ey,ez,eg,nelx,nely,nelz
      common /nekmpi/ mid,mp,nekcomm,nekgroup,nekreal
      common /c_is1/ glo_num(lx1,ly1,lz1,lelv)
      integer*8 glo_num,ex_g

      nel = nelfld(ifld)
      do e=1,nel
       eg = lglel(e)
       call get_exyz(ex,ey,ez,eg,nelx,nely,nelz)
       ex_g = ey       ! Ensure int*8 promotion
       do k=1,nz1      ! Enumerate points in the y-z plane
       do j=1,ny1
       do i=1,nx1
          glo_num(i,j,k,e) = j+ny1*(k-1) + ny1*nz1*(ex_g-1)
       enddo
       enddo
       enddo
      enddo
      n = nel*nx1*ny1*nz1
      call fgslib_gs_setup(gs_avg_hndl,glo_num,n,nekcomm,mp)

      return
      end
c-----------------------------------------------------------------------
      subroutine set_gs_yavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
c     Set the y-average handle
      include 'SIZE'
      include 'TOTAL'
      integer gs_avg_hndl,e,ex,ey,ez,eg,nelx,nely,nelz
      common /nekmpi/ mid,mp,nekcomm,nekgroup,nekreal
      common /c_is1/ glo_num(lx1,ly1,lz1,lelv)
      integer*8 glo_num,ex_g

      nel = nelfld(ifld)
      do e=1,nel
       eg = lglel(e)
       call get_exyz(ex,ey,ez,eg,nelx,nely,nelz)
       ex_g = (ez-1)*nelx+ex       ! Ensure int*8 promotion
       do k=1,nz1      ! Enumerate points in the x-z plane
       do j=1,ny1
       do i=1,nx1
           glo_num(i,j,k,e) = k+nz1*(i-1) + nx1*nz1*(ex_g-1) 
       enddo
       enddo
       enddo
      enddo
      n = nel*nx1*ny1*nz1
      call fgslib_gs_setup(gs_avg_hndl,glo_num,n,nekcomm,mp)

      return
      end
c-----------------------------------------------------------------------
      subroutine set_gs_zavg_hndl(gs_hndl,nelx,nely,nelz,ifld,nrepeat)
c     Set the z-average handle
      include 'SIZE'
      include 'TOTAL'
      integer gs_avg_hndl,e,ex,ey,ez,eg,nelx,nely,nelz
      common /nekmpi/ mid,mp,nekcomm,nekgroup,nekreal
      common /c_is1/ glo_num(lx1,ly1,lz1,lelv)
      integer*8 glo_num,ex_g

      nel = nelfld(ifld)
      do e=1,nel
       eg = lglel(e)
       call get_exyz(ex,ey,ez,eg,nelx,nely,nelz)
       ex_g = ex       ! Ensure int*8 promotion
       do k=1,nz1      ! Enumerate points in the x-y plane
       do j=1,ny1
       do i=1,nx1
          lx = nelx*(nx1-1)+1
          ly = nely*(ny1-1)+1
          lpl= lx*ly
          lb4=      lpl*(k-1+(ez-1)*(nz1-1)) 
          lb4= lb4 + lx*(i-1+(ex-1)*(nx1-1))
          glo_num(i,j,k,e) = lb4 + j + (ey-1)*(ny1-1) 
       enddo
       enddo
       enddo
      enddo
      n = nel*nx1*ny1*nz1
      call fgslib_gs_setup(gs_avg_hndl,glo_num,n,nekcomm,mp)

      return
      end
c-----------------------------------------------------------------------
